{"version":3,"sources":["pages/Gameboard.js","pages/Joinform.js","App.js","reportWebVitals.js","index.js","game/Omok.ts"],"names":["Gameboard","history","useHistory","useState","JSON","parse","sessionStorage","getItem","state","changeState","useEffect","document","querySelector","innerHTML","toState","gameCondition","gridView","color","joinMode","status","Omok","boardWidth","boardHeight","winEvents","push","localStorage","setItem","alert","stringify","hasOwnProperty","loadData","placeEvent","e","x","y","getColor","run","place","Board","board","cellSize","cellIntSize","parseInt","Function","className","map","array","val","alt","width","height","fill","x1","y1","x2","y2","stroke","strokeWidth","onClick","onMouseOver","target","setAttribute","onMouseOut","cx","cy","r","length","SpecList","props","Timer","second","runner","pause","Checkbox","defaultChecked","onChange","checked","Button","console","log","ownerDocument","Joinform","startText","disableSizeInput","disablePassword","changer","form","React","createRef","roomName","password","passwordable","changeJoinMode","id","ref","onSubmit","info","current","valueAsNumber","name","value","type","placeholder","required","minLength","disabled","min","max","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","winCount","result","t","winCheck","winStack","isWin","ways","i","l","sx","sy","vecX","vecY","forEach","count","win","handler","eval","this","origin"],"mappings":"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","file":"static/js/main.6df989ce.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Checkbox } from '@mui/material';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport { Omok } from \"../game\";\r\nimport LioWebRTC from 'liowebrtc';\r\nimport './Gameboard.scss';\r\n\r\n//const publish = false; (publish ? \"./\" : \"\") + \r\n\r\nconst Gameboard = () => {\r\n    const history = useHistory();\r\n\r\n    const [state, changeState] = useState(JSON.parse(sessionStorage.getItem(\"game\")));\r\n    const [lio, rtcConfigure] = useState({\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        // mount\r\n        // page load\r\n        document.querySelector(\"title\").innerHTML = \"Omok\";\r\n        \r\n        // Game loading\r\n        if(state != null) {\r\n            if(state.state === \"start\") {\r\n                const toState = {\r\n                    ...state, \r\n                    state: \"progress\",\r\n                    gameCondition: \"게임 시작 대기중\",\r\n                    gridView: true,\r\n                    color: state.joinMode === \"create\" ? \"black\" : \r\n                            state.joinMode === \"join\" ? \"white\" : \" transparent\",\r\n                    status: new Omok(state.boardWidth, state.boardHeight)\r\n                };\r\n                toState.status.winEvents.push(`console.log(\"win!\")`);\r\n                \r\n\r\n\r\n                changeState(toState);\r\n                if(localStorage.getItem(\"cellSize\") == null) {\r\n                    localStorage.setItem(\"cellSize\", \"32px\");\r\n                }\r\n            }\r\n        } else {\r\n            alert(\"올바르지 않은 접근으로 인해 첫 화면으로 이동됩니다.\");\r\n            history.push(\"/\");\r\n        }\r\n\r\n        return () => {\r\n            // unmount\r\n            if(state != null) {\r\n                sessionStorage.setItem(\"game\", JSON.stringify(state));\r\n            }\r\n        }\r\n    } , [state, changeState, history]);\r\n    \r\n    // Sync\r\n    if(state != null && state.hasOwnProperty(\"status\")) {\r\n        if(!state.status.hasOwnProperty(\"place\")) {\r\n            changeState({...state, status: Omok.loadData(state.status)})\r\n        }\r\n    }\r\n    \r\n    // events\r\n    \r\n    const placeEvent = (e, x, y) => {\r\n        if(state.status.getColor(x, y) === \"transparent\") {\r\n            changeState({...state, run: state.status.place(x, y, state.color)});\r\n            changeState({...state, run: null});\r\n        }\r\n    };\r\n    \r\n    // webrtc(module - liowebrtc) events\r\n    \r\n    const joinHandler = (e) => {\r\n        \r\n    };\r\n\r\n    // game\r\n\r\n    function Board({board, place = (e, x, y) => { alert(x + \" / \" + y); }}){\r\n    const cellSize = localStorage.getItem(\"cellSize\") != null ? localStorage.getItem(\"cellSize\") : \"32px\", cellIntSize = parseInt(cellSize);\r\n        if(board != null && typeof board.board == typeof Function) {\r\n            return (\r\n                <div className=\"board\">\r\n                    {board.board().map((array, y) => (<div className=\"line\" key={y}>\r\n                        {array.map((val, x) => (\r\n                            <svg\r\n                                alt=\"cell\" key={y * array.length + x}\r\n                                width={cellSize} height={cellSize}\r\n                            >\r\n                                <rect width={cellSize} height={cellSize} fill=\"sandybrown\"/>\r\n                                {(() => state.gridView ? <>\r\n                                    <line x1={cellIntSize / 2} y1={0} x2={cellIntSize / 2} y2={cellIntSize} stroke=\"black\" strokeWidth={cellIntSize / 10}/>\r\n                                    <line x1={0} y1={cellIntSize / 2} x2={cellIntSize} y2={cellIntSize / 2} stroke=\"black\" strokeWidth={cellIntSize / 10}/>\r\n                                </>: \"\" )()}\r\n                                \r\n                                {/*<path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>*/}\r\n                                <circle\r\n                                    onClick={(e) => {place(e, x, y);}}\r\n                                    onMouseOver={e => {if(board.getColor(x, y) === \"transparent\"){e.target.setAttribute(\"fill\", \"gray\"); e.target.setAttribute(\"opacity\", \"0.8\");}}}\r\n                                    onMouseOut={e => {e.target.setAttribute(\"fill\", val); e.target.setAttribute(\"opacity\", \"1\");}}\r\n                                    cx={cellIntSize / 2} cy={cellIntSize / 2} r={cellIntSize / 3} fill={val}\r\n                                />\r\n                                {/* 외곽선 */}\r\n                                {(() => x === 0 || x === array.length - 1 ? \r\n                                (<line x1={x === 0 ? 0 : cellIntSize} y1={0} x2={x === 0 ? 0 : cellIntSize} y2={cellIntSize} stroke=\"black\" strokeWidth={cellIntSize / 10} />) : \"\")()}\r\n                                {(() => y === 0 || y === array.length - 1 ? \r\n                                (<line x1={0} y1={y === 0 ? 0 : cellIntSize} x2={cellIntSize} y2={y === 0 ? 0 : cellIntSize} stroke=\"black\" strokeWidth={cellIntSize / 10} />) : \"\")()}\r\n                            </svg>\r\n                        ))}\r\n                        <br/>\r\n                    </div>))}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<div>loading...</div>)\r\n        }\r\n    };\r\n\r\n    // game info\r\n    \r\n    function SpecList({props}) {\r\n        return (\r\n            <div className=\"speclist\" >\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function Timer({second = 0, runner, pause = false}) {\r\n        return (\r\n            <>\r\n                개발 예정\r\n            </>\r\n        );\r\n    }\r\n\r\n    return state !== null ? (\r\n        <div className=\"gameboard\">\r\n            {(() => state != null ? <Board board={state.status} place={placeEvent}/> : null)()}\r\n            <br/>\r\n            <div className=\"information\">\r\n                <h2 className=\"title\"> 상태창 </h2>\r\n                게임 진행 상태 : {state.gameCondition} <br/>\r\n                타이머 : <Timer /> <br/>\r\n                그리드 on/off <Checkbox defaultChecked={true} onChange={(e) => {changeState({...state, gridView: e.target.checked})}}> a</Checkbox>\r\n                <Button onClick={e => console.log(e.target.ownerDocument)}>항복</Button> \r\n                <SpecList/> <br/>\r\n            </div>\r\n            <div className=\"circle fab\"><CategoryIcon/></div>\r\n        </div>\r\n    ) : \"\";\r\n}\r\n\r\nexport default Gameboard;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Joinform.scss';\r\n\r\n\r\nconst Joinform = () => {\r\n  const history = useHistory();\r\n\r\n  const [state, changer] = useState({\r\n    joinMode: \"create\",\r\n    startText: \"방 만들기\",\r\n    disableSizeInput: false,\r\n    disablePassword: true\r\n  });\r\n\r\n  // reference sync\r\n  const form = React.createRef();\r\n  const roomName = React.createRef();\r\n  const password = React.createRef(), passwordable = React.createRef();\r\n  const boardWidth = React.createRef(), boardHeight = React.createRef();\r\n\r\n  useEffect(() => {\r\n    // mount\r\n    // page load\r\n    document.querySelector(\"title\").innerHTML = \"Omok\";\r\n\r\n    return () => {\r\n      // unmount\r\n    }\r\n  } ,[]);\r\n\r\n  // event\r\n  const startGame = (e) => {\r\n    let info = {\r\n      boardWidth: boardWidth.current.valueAsNumber,\r\n      boardHeight: boardHeight.current.valueAsNumber,\r\n      name: roomName.current.value,\r\n      state: \"start\",\r\n      joinMode: state.joinMode,\r\n      password:\"\"\r\n    };\r\n    if(!state.disablePassword) {\r\n      info[\"password\"] = password.current.value;\r\n    } else {\r\n      delete info.password;\r\n    }\r\n    sessionStorage.setItem(\"game\", JSON.stringify(info));\r\n    history.push(\"/board\");\r\n  }\r\n\r\n  const changeJoinMode = (e) => {\r\n    changer({...state, joinMode: e.target.id});\r\n    switch (e.target.id) {\r\n      case \"create\":\r\n        changer({...state, disableSizeInput: false, startText: \"방 만들기\", joinMode: \"create\"})\r\n      return;\r\n\r\n      case \"join\":\r\n        changer({...state, disableSizeInput: true, startText: \"게임 참여\", joinMode: \"join\"});\r\n      return;\r\n\r\n      case \"spectate\":\r\n        changer({...state, disableSizeInput: true, startText: \"관전하기\", joinMode: \"spectate\"});\r\n      return;\r\n\r\n      case \"replay\":\r\n        changer({...state, disableSizeInput: true, startText: \"게임 다시보기\", joinMode: \"replay\"});\r\n      return;\r\n\r\n      default:\r\n      return;\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"joinform\">\r\n      <form className=\"inputform\" ref={form} onSubmit={startGame}>\r\n        <input\r\n          className=\"roomName full\" name=\"roomName\" ref={roomName}\r\n          type=\"text\" placeholder=\"방 이름\" \r\n          required minLength={3}\r\n        />\r\n        <br/>\r\n        <div className=\"password\">\r\n          <input \r\n            className=\"passwordable\" name=\"passwordable\" ref={passwordable}\r\n            onChange={() => {changer({...state, disablePassword: !passwordable.current.checked})}}\r\n            type=\"checkbox\" \r\n          />\r\n          <input\r\n            className=\"password\" name=\"password\" ref={password} disabled={state.disablePassword}\r\n            type=\"password\" placeholder=\"방 접속 암호\" \r\n            required minLength={4}\r\n          />\r\n        </div>\r\n        <div className=\"size\">\r\n          <input\r\n            name=\"boardWidth\" ref={boardWidth} disabled={state.disableSizeInput}\r\n            type=\"number\" placeholder=\"가로\"\r\n            required min={15} max={100}\r\n          />\r\n          <input\r\n            name=\"boardHeight\" ref={boardHeight} disabled={state.disableSizeInput}\r\n            type=\"number\" placeholder=\"세로\"\r\n            required min={15} max={100}\r\n          />\r\n        </div>\r\n        <br/>\r\n        <div className=\"joinMode\">\r\n          <input\r\n            name=\"joinMode\" id=\"create\"\r\n            onChange={changeJoinMode}\r\n            type=\"radio\" value=\"create\" defaultChecked\r\n          />방 만들기 &nbsp;\r\n          <input\r\n            name=\"joinMode\" id=\"join\"\r\n            onChange={changeJoinMode}\r\n            type=\"radio\" value=\"join\"\r\n          />참여 &nbsp;\r\n          <input\r\n            name=\"joinMode\" id=\"spectate\"\r\n            onChange={changeJoinMode}\r\n            type=\"radio\" value=\"spectate\"\r\n          />관전 &nbsp;\r\n          <input\r\n            name=\"joinMode\" id=\"replay\"\r\n            onChange={changeJoinMode}\r\n            type=\"radio\" value=\"replay\"\r\n          />리플레이\r\n        </div>\r\n        <br/>\r\n        <input\r\n          className=\"start\"\r\n          type=\"submit\" value={state.startText}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Joinform;","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport { Gameboard, Joinform } from './pages';\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={Joinform}/>\n      <Route path=\"/board\" component={Gameboard}/>\n    </HashRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","/* eslint-disable no-eval */\r\nclass Omok {\r\n  map: string[] = [];\r\n  width: number;\r\n  height: number;\r\n  winCount: number;\r\n  winEvents: string[] = [];\r\n\r\n  constructor(width: number = 15, height: number = 15, winCount: number = 5) {\r\n    this.map.length = width * height;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.winCount = winCount;\r\n    for (let i = 0; i < this.map.length; i++) {\r\n      this.map[i] = \"transparent\";\r\n    }\r\n  }\r\n\r\n  static loadData(origin: Omok): Omok {\r\n    let result: Omok = new Omok();\r\n    result.map = origin.map;\r\n    result.width = origin.width;\r\n    result.height = origin.height;\r\n    result.winCount = origin.winCount;\r\n    result.winEvents = origin.winEvents;\r\n    return result;\r\n  }\r\n\r\n  readonly board: Function = (): string[][] => {\r\n    const result: string[][] = [];\r\n    for (let y = 0; y < this.height; y++) {\r\n      const t: string[] = [];\r\n      for (let x = 0; x < this.width; x++) {\r\n        t.push(this.map[x + y * this.width]);\r\n      }\r\n      result.push(t);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  readonly getColor: Function = (x: number, y: number): string => {\r\n    if (x + y * this.width < this.map.length) {\r\n      return this.map[x + y * this.width];\r\n    } else {\r\n      return \"transparent\";\r\n    }\r\n  };\r\n\r\n  readonly place: Function = (\r\n    x: number,\r\n    y: number,\r\n    color: string = \"black\"\r\n  ): void => {\r\n    if (x != null && y != null && color != null) {\r\n      this.map[x + y * this.width] = color;\r\n      this.winCheck(x, y, color);\r\n    }\r\n  };\r\n\r\n  private readonly winCheck: Function = (\r\n    x: number,\r\n    y: number,\r\n    color = \"black\"\r\n  ): boolean => {\r\n    let winStack = [1, 1, 1, 1];\r\n    let isWin = false;\r\n    let ways = [\r\n      [-1, 1],\r\n      [0, 1],\r\n      [1, 1],\r\n      [1, 0],\r\n    ];\r\n    for (let i = 0; i < ways.length; i++) {\r\n      for (let l = -1; l < 2; l += 2) {\r\n        let sx = x, sy = y,\r\n          vecX = ways[i][0] * l,\r\n          vecY = ways[i][1] * l;\r\n        while (this.getColor(sx + vecX, sy + vecY) === color) {\r\n          winStack[i]++;\r\n          sx += vecX;\r\n          sy += vecY;\r\n        }\r\n      }\r\n    }\r\n\r\n    winStack.forEach((count) => {\r\n      if (count >= this.winCount) {\r\n        isWin = true;\r\n      }\r\n    });\r\n\r\n    if (isWin) {\r\n      this.win();\r\n    }\r\n    return isWin;\r\n  };\r\n\r\n  private readonly win: Function = (): void => {\r\n    this.winEvents.forEach((handler) => {\r\n      eval(handler);\r\n    });\r\n  };\r\n}\r\n\r\nexport default Omok;"],"sourceRoot":""}