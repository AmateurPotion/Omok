{"version":3,"sources":["pages/Gameboard.js","pages/Joinform.js","App.js","reportWebVitals.js","index.js","game/Omok.ts"],"names":["Gameboard","history","useHistory","useState","JSON","parse","sessionStorage","getItem","state","changeState","useEffect","document","querySelector","innerHTML","gameCondition","gridView","status","Omok","boardWidth","boardHeight","localStorage","setItem","alert","push","stringify","hasOwnProperty","loadData","console","log","placeEvent","e","x","y","getColor","run","place","Board","board","cellSize","cellIntSize","parseInt","Function","className","map","array","val","alt","onClick","width","height","fill","x1","y1","x2","y2","stroke","strokeWidth","cx","cy","r","length","SpecList","props","Timer","second","runner","pause","Checkbox","defaultChecked","onChange","target","checked","Button","d","Joinform","joinMode","startText","disableSizeInput","disablePassword","changer","form","React","createRef","roomName","password","passwordable","changeJoinMode","id","ref","onSubmit","info","current","valueAsNumber","name","value","type","placeholder","required","minLength","disabled","min","max","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","winCount","winEvents","result","t","color","winCheck","winStack","isWin","ways","i","l","start","vecX","vecY","forEach","count","win","handler","eval","this","origin"],"mappings":"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","file":"static/js/main.fb4dfc74.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Checkbox } from '@mui/material';\r\nimport { Omok } from \"../game\";\r\nimport LioWebRTC from 'liowebrtc';\r\nimport './Gameboard.scss';\r\n\r\n//const publish = false; (publish ? \"./\" : \"\") + \r\n\r\nconst Gameboard = () => {\r\n    const history = useHistory();\r\n\r\n    const [state, changeState] = useState(JSON.parse(sessionStorage.getItem(\"game\")));\r\n    const [lio, rtcConfigure] = useState({\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        // mount\r\n        // page load\r\n        document.querySelector(\"title\").innerHTML = \"Omok\";\r\n        \r\n        // Game loading\r\n        if(state != null) {\r\n            if(state.state === \"start\") {\r\n                changeState({\r\n                    ...state, \r\n                    state: \"progress\",\r\n                    gameCondition: \"게임 시작 대기중\",\r\n                    gridView: true,\r\n                    status: new Omok(state.boardWidth, state.boardHeight)\r\n                });\r\n                localStorage.setItem(\"cellSize\", \"32px\");\r\n            }\r\n        } else {\r\n            alert(\"올바르지 않은 접근으로 인해 첫 화면으로 이동됩니다.\");\r\n            history.push(\"/\");\r\n        }\r\n\r\n        return () => {\r\n            // unmount\r\n            if(state != null) {\r\n                sessionStorage.setItem(\"game\", JSON.stringify(state));\r\n            }\r\n        }\r\n    } , [state, changeState, history]);\r\n    \r\n    // Sync\r\n    if(state != null && state.hasOwnProperty(\"status\")) {\r\n        if(!state.status.hasOwnProperty(\"place\")) {\r\n            changeState({...state, status: Omok.loadData(state.status)})\r\n        }\r\n    } else {\r\n        console.log(\"err\");\r\n    }\r\n    \r\n    // events\r\n    \r\n    const placeEvent = (e, x, y) => {\r\n        if(state.status.getColor(x, y) === \"none\") {\r\n            changeState({...state, run: state.status.place(x, y, \"black\")});\r\n            changeState({...state, run: null});\r\n        }\r\n    };\r\n    \r\n    // webrtc(module - liowebrtc) events\r\n    \r\n    const joinHandler = (e) => {\r\n        \r\n    };\r\n\r\n    // game\r\n\r\n    function Board({board, place = (e, x, y) => { alert(x + \" / \" + y); }}){\r\n    const cellSize = localStorage.getItem(\"cellSize\") != null ? localStorage.getItem(\"cellSize\") : \"32px\", cellIntSize = parseInt(cellSize);\r\n        if(board != null && typeof board.board == typeof Function) {\r\n            return (\r\n                <div className=\"board\">\r\n                    {board.board().map((array, y) => (<div className=\"line\" key={y}>\r\n                        {array.map((val, x) => (\r\n                            <svg\r\n                                alt=\"cell\" key={y * array.length + x}\r\n                                onClick={(e) => {place(e, x, y); console.log(x + \" / \" + y)}}\r\n                                width={cellSize} height={cellSize}\r\n                            >\r\n                                <rect width={cellSize} height={cellSize} fill=\"sandybrown\"/>\r\n                                {(() => state.gridView ? <>\r\n                                    <line x1={cellIntSize / 2} y1={0} x2={cellIntSize / 2} y2={cellIntSize} stroke=\"black\" strokeWidth={cellIntSize / 10}/>\r\n                                    <line x1={0} y1={cellIntSize / 2} x2={cellIntSize} y2={cellIntSize / 2} stroke=\"black\" strokeWidth={cellIntSize / 10}/>\r\n                                </>: \"\" )()}\r\n                                \r\n                                {/*<path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>*/}\r\n                                <circle cx={cellIntSize / 2} cy={cellIntSize / 2} r={cellIntSize / 3} fill={val} />\r\n                                {/* 외곽선 */}\r\n                                {(() => x === 0 || x === array.length - 1 ? \r\n                                (<line x1={x === 0 ? 0 : cellIntSize} y1={0} x2={x === 0 ? 0 : cellIntSize} y2={cellIntSize} stroke=\"black\" strokeWidth={cellIntSize / 10} />) : \"\")()}\r\n                                {(() => y === 0 || y === array.length - 1 ? \r\n                                (<line x1={0} y1={y === 0 ? 0 : cellIntSize} x2={cellIntSize} y2={y === 0 ? 0 : cellIntSize} stroke=\"black\" strokeWidth={cellIntSize / 10} />) : \"\")()}\r\n                            </svg>\r\n                        ))}\r\n                        <br/>\r\n                    </div>))}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<div>loading...</div>)\r\n        }\r\n    };\r\n\r\n    // game info\r\n    \r\n    function SpecList({props}) {\r\n        return (\r\n            <div className=\"speclist\" >\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function Timer({second = 0, runner, pause = false}) {\r\n        return (\r\n            <>\r\n                개발 예정\r\n            </>\r\n        );\r\n    }\r\n\r\n    return state !== null ? (\r\n        <div className=\"gameboard\">\r\n            {(() => state != null ? <Board board={state.status} place={placeEvent}/> : null)()}\r\n            <br/>\r\n            <div className=\"information\">\r\n                <h2 className=\"title\"> 상태창 </h2>\r\n                게임 진행 상태 : {state.gameCondition} <br/>\r\n                타이머 : <Timer /> <br/>\r\n                그리드 on/off <Checkbox defaultChecked={true} onChange={(e) => {changeState({...state, gridView: e.target.checked})}}> a</Checkbox>\r\n                <Button>항복</Button> \r\n                <SpecList/> <br/>\r\n            </div>\r\n            {/* fab M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z*/}\r\n            <div className=\"circle fab\"><svg><path stroke=\"black\" strokeWidth=\"10%\" d=\"m12.5,0 l0,25\"></path></svg></div>\r\n        </div>\r\n    ) : \"\";\r\n}\r\n\r\nexport default Gameboard;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Joinform.scss';\r\n\r\n\r\nconst Joinform = () => {\r\n  const history = useHistory();\r\n\r\n  const [state, changer] = useState({\r\n    joinMode: \"create\",\r\n    startText: \"방 만들기\",\r\n    disableSizeInput: false,\r\n    disablePassword: true\r\n  });\r\n\r\n  // reference sync\r\n  const form = React.createRef();\r\n  const roomName = React.createRef();\r\n  const password = React.createRef(), passwordable = React.createRef();\r\n  const boardWidth = React.createRef(), boardHeight = React.createRef();\r\n\r\n  useEffect(() => {\r\n    // mount\r\n    // page load\r\n    document.querySelector(\"title\").innerHTML = \"Omok\";\r\n\r\n    return () => {\r\n      // unmount\r\n    }\r\n  } ,[]);\r\n\r\n  // event\r\n  const startGame = (e) => {\r\n    let info = {\r\n      boardWidth: boardWidth.current.valueAsNumber,\r\n      boardHeight: boardHeight.current.valueAsNumber,\r\n      name: roomName.current.value,\r\n      state: \"start\",\r\n      password:\"\"\r\n    };\r\n    if(!state.disablePassword) {\r\n      info[\"password\"] = password.current.value;\r\n    } else {\r\n      delete info.password;\r\n    }\r\n    sessionStorage.setItem(\"game\", JSON.stringify(info));\r\n    history.push(\"/board\");\r\n  }\r\n\r\n  const changeJoinMode = (e) => {\r\n    changer({...state, joinMode: e.target.id});\r\n    switch (e.target.id) {\r\n      case \"create\":\r\n        changer({...state, disableSizeInput: false, startText: \"방 만들기\"})\r\n      return;\r\n\r\n      case \"join\":\r\n        changer({...state, disableSizeInput: true, startText: \"게임 참여\"});\r\n      return;\r\n\r\n      case \"spectate\":\r\n        changer({...state, disableSizeInput: true, startText: \"관전하기\"});\r\n      return;\r\n\r\n      case \"replay\":\r\n        changer({...state, disableSizeInput: true, startText: \"게임 다시보기\"});\r\n      return;\r\n\r\n      default:\r\n      return;\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"joinform\">\r\n      <form className=\"inputform\" ref={form} onSubmit={startGame}>\r\n        <input\r\n          className=\"roomName full\" name=\"roomName\" ref={roomName}\r\n          type=\"text\" placeholder=\"방 이름\" \r\n          required minLength={3}\r\n        />\r\n        <br/>\r\n        <div className=\"password\">\r\n          <input \r\n            className=\"passwordable\" name=\"passwordable\" ref={passwordable}\r\n            onChange={() => {changer({...state, disablePassword: !passwordable.current.checked})}}\r\n            type=\"checkbox\" \r\n          />\r\n          <input\r\n            className=\"password\" name=\"password\" ref={password} disabled={state.disablePassword}\r\n            type=\"password\" placeholder=\"방 접속 암호\" \r\n            required minLength={4}\r\n          />\r\n        </div>\r\n        <div className=\"size\">\r\n          <input\r\n            name=\"boardWidth\" ref={boardWidth} disabled={state.disableSizeInput}\r\n            type=\"number\" placeholder=\"가로\"\r\n            required min={15} max={100}\r\n          />\r\n          <input\r\n            name=\"boardHeight\" ref={boardHeight} disabled={state.disableSizeInput}\r\n            type=\"number\" placeholder=\"세로\"\r\n            required min={15} max={100}\r\n          />\r\n        </div>\r\n        <br/>\r\n        <div className=\"joinMode\">\r\n          <input\r\n            name=\"joinMode\" id=\"create\"\r\n            onChange={changeJoinMode}\r\n            type=\"radio\" value=\"create\" defaultChecked\r\n          />방 만들기 &nbsp;\r\n          <input\r\n            name=\"joinMode\" id=\"join\"\r\n            onChange={changeJoinMode}\r\n            type=\"radio\" value=\"join\"\r\n          />참여 &nbsp;\r\n          <input\r\n            name=\"joinMode\" id=\"spectate\"\r\n            onChange={changeJoinMode}\r\n            type=\"radio\" value=\"spectate\"\r\n          />관전 &nbsp;\r\n          <input\r\n            name=\"joinMode\" id=\"replay\"\r\n            onChange={changeJoinMode}\r\n            type=\"radio\" value=\"replay\"\r\n          />리플레이\r\n        </div>\r\n        <br/>\r\n        <input\r\n          className=\"start\"\r\n          type=\"submit\" value={state.startText}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Joinform;","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport { Gameboard, Joinform } from './pages';\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={Joinform}/>\n      <Route path=\"/board\" component={Gameboard}/>\n    </HashRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","/* eslint-disable no-eval */\r\nclass Omok {\r\n  map: string[] = [];\r\n  width: number;\r\n  height: number;\r\n  winCount: number;\r\n  winEvents: string[] = [];\r\n\r\n  constructor(width: number = 15, height: number = 15, winCount: number = 5) {\r\n    this.map.length = width * height;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.winCount = winCount;\r\n    for (let i = 0; i < this.map.length; i++) {\r\n      this.map[i] = \"none\";\r\n    }\r\n  }\r\n\r\n  static loadData(origin: Omok): Omok {\r\n    let result: Omok = new Omok();\r\n    result.map = origin.map;\r\n    result.width = origin.width;\r\n    result.height = origin.height;\r\n    result.winCount = origin.winCount;\r\n    result.winEvents = origin.winEvents;\r\n    return result;\r\n  }\r\n\r\n  readonly board: Function = (): string[][] => {\r\n    const result: string[][] = [];\r\n    for (let y = 0; y < this.height; y++) {\r\n      const t: string[] = [];\r\n      for (let x = 0; x < this.width; x++) {\r\n        t.push(this.map[x + y * this.width]);\r\n      }\r\n      result.push(t);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  readonly getColor: Function = (x: number, y: number): string => {\r\n    if (x + y * this.width < this.map.length) {\r\n      return this.map[x + y * this.width];\r\n    } else {\r\n      return \"none\";\r\n    }\r\n  };\r\n\r\n  readonly place: Function = (\r\n    x: number,\r\n    y: number,\r\n    color: string = \"black\"\r\n  ): void => {\r\n    if (x != null && y != null && color != null) {\r\n      this.map[x + y * this.width] = color;\r\n      this.winCheck(x, y, color);\r\n    }\r\n  };\r\n\r\n  private readonly winCheck: Function = (\r\n    x: number,\r\n    y: number,\r\n    color = \"black\"\r\n  ): boolean => {\r\n    x = 0;\r\n    y = 0;\r\n    let winStack = [1, 1, 1, 1];\r\n    let isWin = false;\r\n    let ways = [\r\n      [-1, 1],\r\n      [0, 1],\r\n      [1, 1],\r\n      [1, 0],\r\n    ];\r\n    for (let i = 0; i < ways.length; i++) {\r\n      for (let l = -1; l < 2; l += 2) {\r\n        let start = [x, y],\r\n          vecX = ways[i][0] * l,\r\n          vecY = ways[i][1] * l;\r\n        while (this.getColor(start[0] + vecX, start[1] + vecX) === color) {\r\n          winStack[i]++;\r\n          start[0] += vecX;\r\n          start[1] += vecY;\r\n        }\r\n      }\r\n    }\r\n\r\n    winStack.forEach((count) => {\r\n      if (count >= this.winCount) {\r\n        isWin = true;\r\n      }\r\n    });\r\n\r\n    if (isWin) {\r\n      this.win();\r\n    }\r\n    return isWin;\r\n  };\r\n\r\n  private readonly win: Function = (): void => {\r\n    this.winEvents.forEach((handler) => {\r\n      eval(handler);\r\n    });\r\n  };\r\n}\r\n\r\nexport default Omok;"],"sourceRoot":""}